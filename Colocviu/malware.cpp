#include "malware.h"

malware::malware() {
    rating_impact = 0;
    metoda_infectare = "unknown";
}

malware::~malware() {
    //cout << "Obiectul 'malware' a fost distrus.\n";
}

void malware::citire() {
    cout << "Rating impact: "; cin >> rating_impact;
    cin.ignore();
    cout << "Data infetare: "; getline(cin, data_infectare);
    int k;
    cout << "Se cunoaste metoda de infectare? 1 pentru da/0 pentru nu  ";
    cin >> k;
    if (k == 1) {
        cout << "Metoda de infectare: ";
        cin.ignore();
        getline(cin, metoda_infectare);
    }
    cout << "Numar registri: ";
    cin >> nr_registri;
    for(int i = 0; i < nr_registri; ++i) {
        cout << "Registru: ";
        cin >> registri[i];
    }
}

void malware::afisare() {
    cout << "Rating impact: " << rating_impact;
    cout << "\nData infetare: " << data_infectare;
    cout << "\nMetoda de infectare: " << metoda_infectare;
    cout << "\nRegistri: ";
    for(int i = 0; i < nr_registri; ++i)
        cout << registri[i] << " ";
    cout << "\n";
}

istream& operator>> (istream& in, malware& m) {
    m.citire();
    return in;
}

ostream& operator<< (ostream& out, malware& m) {
    m.afisare();
    return out;
}

malware malware::operator=(malware m) {
    if(this != &m) {
        this->rating_impact = m.rating_impact;
        this->data_infectare = m.data_infectare;
        this->metoda_infectare = m.metoda_infectare;
        this->nr_registri = m.nr_registri;
        for (int i = 0; i < m.nr_registri; ++i)
            this->registri[i] = m.registri[i];
    }
    return *this;
}

int malware::add_rating_registri() {
    for (int i = 0; i < nr_registri; ++i)
        if (registri[i] == "HKLM-run" || registri[i] == "HKCU-run")
            return 20;
    return 0;
}
